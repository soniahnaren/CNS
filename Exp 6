#include <stdio.h>
int modInverse(int a, int m) {
    for (int x = 1; x < m; x++)
        if ((a * x) % m == 1) return x;
    return -1;
}
int main() {
    int a, b, a_inv;
    for (a = 1; a < 26; a++) {
        if ((15 * a) % 26 == 19) break;
    }
    b = (1 - 4 * a + 26 * 26) % 26;  // From (4a + b) % 26 = 1
    a_inv = modInverse(a, 26);

    if (a_inv == -1) {
        printf("No modular inverse found.\n");
        return 1;
    }
    printf("Possible key found: a = %d, b = %d\n", a, b);
    printf("Use decryption: P = a_inv * (C - b) mod 26\n");
    return 0;
}
